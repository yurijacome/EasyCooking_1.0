{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\Jacomi\\\\Dev\\\\Code\\\\EasyCooking_1.0\\\\src\\\\components\\\\registerForm\\\\registerForm.jsx\";\nimport React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm } from './registerFormStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required').matches(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/, 'Invalid email'),\n  username: Yup.string().required('Username is required').min(8, 'username is too short - should be 8 chars minimum.'),\n  password: Yup.string().required('Password is required').min(8, 'Password is too short - should be 8 chars minimum.').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/, 'Password must contain at least one uppercase letter, one lowercase letter, and one number.'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n});\nconst RegisterForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      email: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: () => /*#__PURE__*/_jsxDEV(StyledForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"Field\",\n        name: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\",\n        component: \"span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"Field\",\n        name: \"username\",\n        placeholder: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"username\",\n        component: \"span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Senha \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"Field\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"password\",\n        component: \"span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirmar senha \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"Field\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"confirmPassword\",\n        component: \"span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"registerSpan\",\n        children: [\"Ja tem uma conta? Fa\\xE7a seu \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Formik","Field","ErrorMessage","Yup","StyledForm","jsxDEV","_jsxDEV","validationSchema","object","shape","email","string","required","matches","username","min","password","confirmPassword","oneOf","ref","RegisterForm","initialValues","onSubmit","values","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","placeholder","component","type","href","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/Jacomi/Dev/Code/EasyCooking_1.0/src/components/registerForm/registerForm.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { StyledForm } from './registerFormStyle';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n    email: Yup.string().email('Invalid email').required('Email is required')\r\n    .matches(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/,\r\n    'Invalid email'),\r\n\r\n    username: Yup.string().required('Username is required')\r\n    .min(8, 'username is too short - should be 8 chars minimum.'),\r\n\r\n    password: Yup.string().required('Password is required')\r\n    .min(8, 'Password is too short - should be 8 chars minimum.')\r\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n    'Password must contain at least one uppercase letter, one lowercase letter, and one number.'),\r\n    \r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n \r\n \r\n    return (\r\n\r\n        <Formik\r\n            initialValues={{ username: '', password: '', confirmPassword: '', email: '' }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => {\r\n                console.log(values);\r\n            }}\r\n        >\r\n            {() => (\r\n                <StyledForm>\r\n                    <h1>Registrar</h1>\r\n\r\n                    <label>Email </label>\r\n                    <Field className=\"Field\" name=\"email\" placeholder=\"Email\" />\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n\r\n                    <label>Nome </label>\r\n                    <Field className=\"Field\" name=\"username\" placeholder=\"Nome\" />\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n\r\n                    <label>Senha </label>\r\n                    <Field className=\"Field\" name=\"password\" type=\"password\" placeholder=\"Senha\" />\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n\r\n                    <label>Confirmar senha </label>\r\n                    <Field className=\"Field\" name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" />\r\n                    <ErrorMessage name=\"confirmPassword\" component=\"span\" />\r\n\r\n                    <button type=\"submit\">Registrar</button>\r\n                    <span className='registerSpan'>Ja tem uma conta? Fa√ßa seu <a href=\"/login\">login</a></span>\r\n                </StyledForm>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}